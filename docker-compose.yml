version: '3.5'
services:
  config:
    container_name: '${PROJECT_NAME}_config'
    image: 'composer:2.1.5'
    volumes:
      - './:/app'
    command: composer install --ignore-platform-reqs
  db:
    container_name: '${PROJECT_NAME}_db'
    image: 'mariadb:10.5.9'
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_USER: '${DB_USER}'
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_NAME}'
  phpmyadmin:
    container_name: '${PROJECT_NAME}_phpmyadmin'
    image: phpmyadmin/phpmyadmin
    env_file:
      - .env
    ports:
      - '8080:80'
    depends_on:
      - db
  wordpress:
    container_name: '${PROJECT_NAME}_wordpress'
    image: 'wpdiaries/wordpress-xdebug:5.8.2-php7.4-apache'
    ports:
      - '80:80'
    environment:
      WORDPRESS_DB_HOST: '${DB_HOST}'
      WORDPRESS_DB_USER: '${DB_USER}'
      WORDPRESS_DB_PASSWORD: '${DB_PASSWORD}'
      WORDPRESS_DB_NAME: '${DB_NAME}'
      XDEBUG_CONFIG: '${XDEBUG_CONFIG}'
    volumes:
      - './vendor:/var/www/html/vendor'
      - './.env:/var/www/html/.env'
      - './wp-config.php:/var/www/html/wp-config.php'
      - './wp-content/themes/${THEME_SLUG}:/var/www/html/wp-content/themes/${THEME_SLUG}'
      - './wp-content/plugins:/var/www/html/wp-content/plugins'
      - './wp-content/uploads:/var/www/html/wp-content/uploads'
    depends_on:
      config:
        condition: service_completed_successfully
  themebackend:
    container_name: '${PROJECT_NAME}_themebackend'
    image: composer
    volumes_from:
      - wordpress
    working_dir: '/var/www/html/wp-content/themes/${THEME_SLUG}'
    command: composer install --ignore-platform-reqs
    depends_on:
      - wordpress
  themefrontend:
    container_name: '${PROJECT_NAME}_themefrontend'
    image: node:lts
    depends_on:
      - db
      - themebackend
      - config
      - wordpress
    working_dir: '/var/www/html/wp-content/themes/${THEME_SLUG}'
    command: bash -c "yarn && yarn start"
    ports:
      - '3000:3000'
      - '3001:3001'
    volumes_from:
      - wordpress
  mailhog:
    container_name: '${PROJECT_NAME}_mailhog'
    image: mailhog/mailhog
    logging:
      driver: 'none' # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
